<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="136" started-at="2020-12-09T10:36:39 CST" finished-at="2020-12-09T10:36:39 CST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="136" started-at="2020-12-09T10:36:39 CST" finished-at="2020-12-09T10:36:39 CST">
      <class name="com.lw.selenium.Demo">
        <test-method status="FAIL" signature="doBeforeClass()[pri:0, instance:com.lw.selenium.Demo@9660f4e]" name="doBeforeClass" is-config="true" duration-ms="50" started-at="2020-12-09T10:36:39 CST" finished-at="2020-12-09T10:36:39 CST">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Specified firefox binary location does not exist or is not a real file: C:Program Files (x86)Mozilla Firefoxirefox.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Specified firefox binary location does not exist or is not a real file: C:Program Files (x86)Mozilla Firefoxirefox.exe
at com.google.common.base.Preconditions.checkState(Preconditions.java:504)
at org.openqa.selenium.firefox.Executable.<init>(Executable.java:43)
at org.openqa.selenium.firefox.FirefoxBinary.<init>(FirefoxBinary.java:123)
at org.openqa.selenium.firefox.FirefoxOptions$Binary.asBinary(FirefoxOptions.java:420)
at java.util.Optional.map(Optional.java:215)
at org.openqa.selenium.firefox.FirefoxOptions.getBinaryOrNull(FirefoxOptions.java:220)
at org.openqa.selenium.firefox.FirefoxOptions.getBinary(FirefoxOptions.java:216)
at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:187)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:147)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:125)
at com.webtest.core.BaseTest.newWebDriver(BaseTest.java:29)
at com.webtest.core.BaseTest.doBeforeClass(BaseTest.java:49)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:64)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:364)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:318)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doBeforeClass -->
        <test-method status="SKIP" signature="test_login1()[pri:0, instance:com.lw.selenium.Demo@9660f4e]" name="test_login1" is-config="true" duration-ms="-1607481399893" started-at="2020-12-09T10:36:39 CST" finished-at="1970-01-01T08:00:00 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_login1 -->
        <test-method status="SKIP" signature="test2()[pri:0, instance:com.lw.selenium.Demo@9660f4e]" name="test2" duration-ms="0" started-at="2020-12-09T10:36:39 CST" finished-at="2020-12-09T10:36:39 CST">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Specified firefox binary location does not exist or is not a real file: C:Program Files (x86)Mozilla Firefoxirefox.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Specified firefox binary location does not exist or is not a real file: C:Program Files (x86)Mozilla Firefoxirefox.exe
at com.google.common.base.Preconditions.checkState(Preconditions.java:504)
at org.openqa.selenium.firefox.Executable.<init>(Executable.java:43)
at org.openqa.selenium.firefox.FirefoxBinary.<init>(FirefoxBinary.java:123)
at org.openqa.selenium.firefox.FirefoxOptions$Binary.asBinary(FirefoxOptions.java:420)
at java.util.Optional.map(Optional.java:215)
at org.openqa.selenium.firefox.FirefoxOptions.getBinaryOrNull(FirefoxOptions.java:220)
at org.openqa.selenium.firefox.FirefoxOptions.getBinary(FirefoxOptions.java:216)
at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:187)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:147)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:125)
at com.webtest.core.BaseTest.newWebDriver(BaseTest.java:29)
at com.webtest.core.BaseTest.doBeforeClass(BaseTest.java:49)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:64)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:364)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:318)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="SKIP" signature="doAfterMethod()[pri:0, instance:com.lw.selenium.Demo@9660f4e]" name="doAfterMethod" is-config="true" duration-ms="-1607481399903" started-at="2020-12-09T10:36:39 CST" finished-at="1970-01-01T08:00:00 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfterMethod -->
      </class> <!-- com.lw.selenium.Demo -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
